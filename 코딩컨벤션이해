🧩 1️⃣ 코딩 컨벤션(Coding Convention)이란?

💬 “코드를 예쁘게, 읽기 쉽게, 일관성 있게 쓰는 약속”

즉, 코드 스타일 규칙집이에요.
문법적으로는 전혀 틀리지 않아도,
사람이 읽기 어려우면 유지보수가 힘들기 때문에
회사나 언어마다 “형식”을 정해두죠.

예를 들어 👇

같은 의미지만…	다른 스타일
int UserCount = 5;	✅ 보기 좋음
int user_count = 5;	✅ 보기 좋음
int USERCOUNT=5;	😕 헷갈림
int u = 5;	❌ 나중에 보면 뭔 의미인지 모름
🧠 2️⃣ 케이스(case) 표기법 종류 정리
🐍 스네이크 케이스 (snake_case)

단어 사이를 언더바 _ 로 이어서 씀
→ 마치 “뱀처럼” 이어져서 붙어있다고 해서 snake_case

int user_count = 10;
string user_name = "bosun";


✅ 주로 C언어, Python, 또는 상수 정의에서 자주 씀

🐫 카멜 케이스 (camelCase)

첫 단어는 소문자, 이후 단어는 대문자로 시작
→ 낙타 등처럼 중간이 튀어나와서 camelCase

int userCount = 10;
string userName = "bosun";


✅ Java, JavaScript, C++, Kotlin 등에서 변수나 함수 이름용으로 흔함

🏛️ 파스칼 케이스 (PascalCase)

모든 단어를 대문자로 시작
→ 클래스명, 타입명 등에 주로 사용

class UserRequest {};
class DataManager {};


✅ C++, Java에서 클래스/구조체/Enum 이름 용도로 표준

🧱 스네이크 대문자 (UPPER_SNAKE_CASE)

모두 대문자 + 언더바로 구분
→ 상수(Constant) 이름에 사용

const int MAX_COUNT = 100;
#define DEFAULT_PORT 8080


✅ C/C++ 매크로, 전역 상수 등에서 표준

⚙️ 3️⃣ 각 케이스를 언제 쓰는지 정리
용도	표기법	예시	사용 언어
변수 / 함수 이름	camelCase	userCount, getData()	C++, Java, JS
클래스 / 구조체 이름	PascalCase	UserManager, RequestInfo	C++, Java
상수 / 매크로	UPPER_SNAKE_CASE	MAX_SIZE, DEFAULT_PORT	C, C++, Python
C 스타일 변수명	snake_case	user_count, get_name()	C, Python
💡 4️⃣ 예시로 보기
✅ C 스타일 (snake_case)
int user_count;
void get_user_info();

✅ C++ / Java 스타일 (camel + Pascal)
class UserInfo {
public:
    int userCount;
    void getUserInfo();
};

✅ 상수 (UPPER_SNAKE_CASE)
const int MAX_USER_COUNT = 100;
#define DEFAULT_PORT 8080

🧭 5️⃣ 정리 요약
이름 방식	생김새	주로 쓰는 곳
snake_case	user_name, user_id	C, Python 변수/함수
camelCase	userName, getData	Java, C++ 변수/함수
PascalCase	UserManager, MainApp	클래스, 구조체 이름
UPPER_SNAKE_CASE	MAX_COUNT, DEFAULT_PORT	상수, 매크로

💬 요약 문장으로 기억하기:

🐍 Snake_case → 함수·변수 (C스타일)
🐫 camelCase → 함수·변수 (Java/C++스타일)
🏛️ PascalCase → 클래스·타입명
🔠 UPPER_SNAKE_CASE → 상수
